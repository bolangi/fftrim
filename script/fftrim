#!/usr/bin/env perl
package fftrim;
use App::fftrim;
use strict;
use warnings;
use Path::Tiny;
use autodie ':all';
use feature 'say';
use Cwd;

use Getopt::Long::Descriptive;
our ($opt, $usage) = describe_options(
   '%c %o',
   [ 'in=s',			"input file"],
   [ 'out=s',			"output file"],
   [ 'start=s',			"start time"],
   [ 'end=s',			"end time"],
            --profile STR      
   [ 'profile=s',       'merge ffmpeg options from named file in $HOME/.fftrim'],
   [ 'source-dir=s',  	"source directory (batch mode)" ],
   [ 'target-dir=s',	"destination directory (batch mode)" ],
   [ 'c',      			"make output files conform to source file frame rate" ],
   [ 'n',      			"simulate: show output commands but do not run them" ],
   [ 'm',      			"simulate: show output commands omitting file checks" ],
   [ 'help',   			"print usage message and exit" ],
 );
print($usage->text), exit if $opt->{help} or ! keys %$opt;

# 00000.MTS 00001.MTS 00002.MTS : 20170815-1 : 0:15 : # 1+2+11:41
# three .MTS files are to be concatentated into
# intermediate file 00000.mp4, then trimmed and 
# compressed into ../final/20170815-1.mp4

our $current_dir = getcwd;

# support old filename
our ($control_file) = grep{ -e } map{ join_path($opt->{source_dir},$_) }  qw(CONTROL CONTENTS);
-e $control_file or die "CONTROL file not found in $opt->{source_dir}";
our $dotdir = join_path($ENV{HOME}, '.fftrim');
if ( ! -d $dotdir)
{	say qq(Directory "$dotdir" not found. Create it? y/n [Y]);
	my $answer = <STDIN>;
	mkdir $dotdir if $answer =~ /[yYjJ]/;
}
our $profile = join_path($dotdir,  $opt->{profile} // 'default');
if ($profile =~ /\bdefault$/ and ! -e $profile )
{
	my $defaultfile = path($profile);
	say STDERR "creating default profile in $profile";
	$defaultfile->spew(<DATA>);
	say STDERR "edit the settings to suit your output targets or create additional profiles";
}
say STDERR "profile is $profile";
our $fh;
if ( -r $profile){ open $fh, '<', $profile }
else { $fh = *DATA }
our $encoding_params = join '', grep {! /^#/} <$fh>;
$encoding_params =~ s/\n/ /g;
compress_and_trim_video($opt->{in}, $opt->{out}, $opt->{start} // 0, $opt->{end}), exit if $opt->{in} and $opt->{out};


our %length;
our $framerate;
our $finaldir = $opt->{target_dir};
mkdir $finaldir unless -e $finaldir;
-d $finaldir or die "$finaldir is not a directory!";

our $control = path($control_file);
our (@lines) = grep {! /^#/} map{ chomp; $_ } $control->lines;
our $is_error;

process_lines(); # check for errors;
say(STDERR "Errors found. Fix $control_file and try again."), exit if $is_error;
process_lines("really do it! (but still may be a test)");

__DATA__
# change the following ffmpeg arguments to suit
-c:v libx264
-preset:v medium
-profile:v main
-tune:v film
-s:v 640x360
-c:a aac
-b:a 80k
-ac 2
-ar 24000
-level 3

# don't change these arguments
-strict -2
# -copyts # causes problem rendering 20180923-2
